<?xml version="1.0" encoding="UTF-8"?>
<project name="AL-Game" default="dist" basedir=".">
    <description>AL-Game Project Build Script</description>
    
    <!-- 环境检测与属性定义 / Environment detection and property definition -->
    <property environment="env"/>
    <fail message="JDK8 is required, please make sure to use JDK 1.8">
        <condition>
            <not>
                <equals arg1="${ant.java.version}" arg2="1.8"/>
            </not>
        </condition>
    </fail>
    
    <!-- 定义属性 / Define properties -->
    <property name="jdk8.home" location="${env.JAVA_HOME}"/>
    <property name="jre" location="${java.home}/lib"/>
    <property name="src" location="src"/>
    <property name="config" location="config"/>
    <property name="lib" location="libs"/>
    <property name="build" location="build"/>
    <property name="build.classes" location="${build}/classes"/>
    <property name="build.dist" location="${build}/dist"/>
    <property name="build.dist.gs" location="${build.dist}/AL-Game"/>
    
    <!-- 定义依赖版本 / Define dependency versions -->
    <property name="guava.version" value="30.1-jre"/>
    
    <!-- 时间戳 / Timestamp -->
    <tstamp>
        <format property="build.time" pattern="yyyy-MM-dd HH:mm:ss Z"/>
    </tstamp>
    
    <!-- 定义 bootclasspath / Define bootclasspath -->
    <path id="bootclasspath">
        <fileset dir="${lib}">
            <include name="jsr166-1.7.0.jar"/>
        </fileset>
        <fileset dir="${jre}">
            <include name="rt.jar"/>
            <include name="jce.jar"/>
        </fileset>
    </path>
    
    <!-- 定义 classpath / Define classpath -->
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
            <include name="guava-${guava.version}.jar"/>
        </fileset>
    </path>
    
    <!-- 清理构建目录 / Clean build directory -->
    <target name="clean" description="Clean build directory.">
        <delete dir="${build}"/>
        <echo message="Build directory has been cleaned."/>
    </target>
    
    <!-- 初始化构建目录 / Initialize build directory -->
    <target name="init" depends="clean" description="Create output directory.">
        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <echo message="Output directory has been created."/>
    </target>
    
    <!-- 编译源代码 / Compile source code -->
    <target name="compile" depends="init" description="Compile source code.">
        <javac destdir="${build.classes}" 
               optimize="on" 
               debug="on" 
               nowarn="on" 
               source="1.8" 
               target="1.8" 
               includeantruntime="false" 
               encoding="UTF8"
               fork="true"
               memorymaximumsize="1024m">
            <compilerarg value="-encoding"/>
            <compilerarg value="UTF8"/>
            <!-- 添加JDK8优化编译参数 / Add JDK8 optimization compilation parameters -->
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Xlint:-deprecation"/>
            <compilerarg value="-Xlint:-unchecked"/>
            <compilerarg value="-Xlint:-rawtypes"/>
            <compilerarg value="-Xdiags:verbose"/>
            
            <src path="${src}"/>
            <bootclasspath refid="bootclasspath"/>
            <classpath refid="classpath"/>
        </javac>
        <echo message="Source code compiled successfully."/>
    </target>
    
    <!-- 打包成 JAR 文件 / Package into JAR file -->
    <target name="jar" depends="compile" description="Create JAR file.">
        <tstamp>
            <format property="date" pattern="yyyy-MM-dd-HH:mm"/>
        </tstamp>
        <jar destfile="${build}/AL-Game.jar">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Main-Class" value="com.aionemu.gameserver.GameServer"/>
                <attribute name="Revision" value="${revision}"/>
                <attribute name="Date" value="${date}"/>
                <attribute name="Build-Jdk-Spec" value="1.8"/>
                <attribute name="Created-By" value="${ant.version} (JDK ${java.version})"/>
            </manifest>
        </jar>
        <echo message="JAR file created: ${build}/AL-Game.jar"/>
    </target>
    
    <!-- 创建发布包 / Create distribution package -->
    <target name="dist" depends="jar" description="Create distribution package.">
        <mkdir dir="${build.dist}"/>
        <mkdir dir="${build.dist.gs}"/>
        <mkdir dir="${build.dist.gs}/config"/>
        <mkdir dir="${build.dist.gs}/data"/>
        <mkdir dir="${build.dist.gs}/libs"/>
        <mkdir dir="${build.dist.gs}/sql"/>

        <copy todir="${build.dist.gs}">
            <fileset dir="dist">
                <include name="*"/>
            </fileset>
        </copy>

        <!-- 复制 JAR 文件到发布目录 / Copy JAR file to distribution directory -->
        <copy todir="${build.dist.gs}/libs">
            <fileset dir="${build}">
                <include name="AL-Game.jar"/>
            </fileset>
        </copy>
        
        <!-- 复制依赖库到发布目录 / Copy dependencies to distribution directory -->
        <copy todir="${build.dist.gs}/libs">
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
        </copy>
        
        <!-- 复制配置文件到发布目录 / Copy configuration files to distribution directory -->
        <copy todir="${build.dist.gs}/config">
            <fileset dir="config">
                <include name="**/*"/>
            </fileset>
        </copy>
        
        <!-- 复制数据文件到发布目录 / Copy data files to distribution directory -->
        <copy todir="${build.dist.gs}/data">
            <fileset dir="data">
                <include name="**/*"/>
            </fileset>
        </copy>
        
        <!-- 复制 SQL 文件到发布目录 / Copy SQL files to distribution directory -->
        <copy todir="${build.dist.gs}/sql">
            <fileset dir="sql">
                <include name="**/*"/>
            </fileset>
        </copy>
        
        <!-- 打包成 ZIP 文件 / Package into ZIP file -->
        <zip destfile="${build}/AL-Game.zip" basedir="${build.dist}"/>
        <echo message="Distribution package created: ${build}/AL-Game.zip"/>
    </target>
</project>